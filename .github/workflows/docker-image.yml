name: create executable

on:
  push:
    branches: [ "pipeline" ]
  pull_request:
    branches: [ "pipeline" ]

jobs:
  # build-and-test:
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.9'

  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt

  #     - name: Run tests with coverage
  #       run: |
  #         cd src
  #         coverage run -m unittest

  create-executable-linux:
    # needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0

    - name: git stash/pull/checkout
      run: |
        git stash
        git pull
        git checkout ${{ github.ref }}

    - name: Install dependencies
      run: |
        pip install pyinstaller

    - name: Build Linux executable
      run: |
        if [ -f dist/myscript_linux ]; then
          rm dist/myscript_linux
        fi
        pyinstaller --onefile --name myscript_linux src/main.py

    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add dist/myscript_linux
        git commit -q -m "Add artifacts" || true
      


    - name: push artifacts
      uses: ad-m/github-push-action@master
      with:
        branch: ${{ github.ref }}

  create-executable-windows:
    needs: create-executable-linux
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0

    - name: git stash/pull/checkout
      run: |
        git stash
        git pull
        git checkout ${{ github.ref }}

    - name: Install dependencies
      run: |
        pip install pyinstaller

    - name: Build Windows executable
      run: pyinstaller --onefile --name myscript_windows src/main.py

    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add dist/myscript_windows
        git commit -q -m "Add artifacts" || true
    
    - name: push artifacts
      uses: ad-m/github-push-action@master
      with:
        branch: ${{ github.ref }}