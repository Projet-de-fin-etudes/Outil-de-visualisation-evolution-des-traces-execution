name: Docker Image CI

on:
  push:
    branches: [ "pipeline" ]
  pull_request:
    branches: [ "pipeline" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

  setup-python:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

  install-dependencies:
    needs: setup-python
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: pip install -r requirements.txt

  run-tests:
    needs: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run tests with coverage
        run: |
          cd src
          coverage run --source=. -m unittest

  # check-coverage:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Check code coverage
  #       run: |
  #         # Get coverage percentage from the coverage report
  #         COVERAGE_PERCENTAGE=$(coverage report --fail-under=80 | grep TOTAL | awk '{print $NF}')

  #         # Check if coverage is above 80%
  #         if [[ $COVERAGE_PERCENTAGE < 80 ]]; then
  #           echo "Code coverage is below 80% ($COVERAGE_PERCENTAGE%)"
  #           exit 1
  #         fi

  build-docker-image:
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: tommyti/outil-de-visualisation-evolution-des-traces-execution:latest
